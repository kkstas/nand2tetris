// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/Register.hdl
/**
 * 16-bit register:
 * If load is asserted, the register's value is set to in;
 * Otherwise, the register maintains its current value:
 * if (load(t)) out(t+1) = int(t), else out(t+1) = out(t)
 */
CHIP Register {
    IN in[16], load;
    OUT out[16];

    PARTS:
    Mux16(a[0]=dffOut0, a[1]=dffOut1, a[2]=dffOut2, a[3]=dffOut3, a[4]=dffOut4, a[5]=dffOut5, a[6]=dffOut6, a[7]=dffOut7, a[8]=dffOut8, a[9]=dffOut9, a[10]=dffOut10, a[11]=dffOut11, a[12]=dffOut12, a[13]=dffOut13, a[14]=dffOut14, a[15]=dffOut15, b=in, sel=load, out[0]=muxOut0, out[1]=muxOut1, out[2]=muxOut2, out[3]=muxOut3, out[4]=muxOut4, out[5]=muxOut5, out[6]=muxOut6, out[7]=muxOut7, out[8]=muxOut8, out[9]=muxOut9, out[10]=muxOut10, out[11]=muxOut11, out[12]=muxOut12, out[13]=muxOut13, out[14]=muxOut14, out[15]=muxOut15);
    Mux16(a[0]=dffOut0, a[1]=dffOut1, a[2]=dffOut2, a[3]=dffOut3, a[4]=dffOut4, a[5]=dffOut5, a[6]=dffOut6, a[7]=dffOut7, a[8]=dffOut8, a[9]=dffOut9, a[10]=dffOut10, a[11]=dffOut11, a[12]=dffOut12, a[13]=dffOut13, a[14]=dffOut14, a[15]=dffOut15, b=false, sel=false, out=dffOut);
    DFF(in=muxOut0, out=dffOut0);
    DFF(in=muxOut1, out=dffOut1);
    DFF(in=muxOut2, out=dffOut2);
    DFF(in=muxOut3, out=dffOut3);
    DFF(in=muxOut4, out=dffOut4);
    DFF(in=muxOut5, out=dffOut5);
    DFF(in=muxOut6, out=dffOut6);
    DFF(in=muxOut7, out=dffOut7);
    DFF(in=muxOut8, out=dffOut8);
    DFF(in=muxOut9, out=dffOut9);
    DFF(in=muxOut10, out=dffOut10);
    DFF(in=muxOut11, out=dffOut11);
    DFF(in=muxOut12, out=dffOut12);
    DFF(in=muxOut13, out=dffOut13);
    DFF(in=muxOut14, out=dffOut14);
    DFF(in=muxOut15, out=dffOut15);
    Or16(a=dffOut, b=dffOut, out=out);
}
